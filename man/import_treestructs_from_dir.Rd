% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/QSM_funcs.r
\name{import_treestructs_from_dir}
\alias{import_treestructs_from_dir}
\title{import_treestructs_from_dir}
\usage{
import_treestructs_from_dir(
  qsm_path = ".",
  recursive = F,
  qsmver = "by_name",
  qsmtype = c("by_ext", "QSMtree", "treegraph"),
  filematch_pattern = "(\\\\.mat)|(\\\\.json)",
  nest = F
)
}
\arguments{
\item{qsm_path}{PARAM_DESCRIPTION, Default: '.'}

\item{recursive}{PARAM_DESCRIPTION, Default: F}

\item{qsmver}{PARAM_DESCRIPTION, Default: "by_name"}

\item{qsmtype}{program used to create QSM - currently either QSMtree (.mat) or treegraph (.json). Default: "by_ext" (i.e., .mat = QSMtree, .json = treegraph)}

\item{filematch_pattern}{regex filematch pattern (used in list.files), Default: "(\\.mat)|(\\.json)"}

\item{nest}{nest cylinder dataframes in a column, Default: FALSE}
}
\value{
OUTPUT_DESCRIPTION
}
\description{
utility function to create treestruct dataframe that can be used to create a TreeStructs object
}
\details{
this function extracts the CylData elements of all the "*.mat" files in the indicated directory
}
\examples{
\dontrun{
if(interactive()){
 my_3d_trees = TreeStructs(dataset = "my_trees", treestructs = import_treestructs_from_dir("./qsm_files"))
 }
}
}
